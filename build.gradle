group 'net.rymate.jpanel'
version '1.0-SNAPSHOT'

apply plugin: 'java'

sourceCompatibility = 8

repositories {
    mavenCentral()

    maven {
        url "https://hub.spigotmc.org/nexus/content/repositories/snapshots/"
    }

    maven {
        url "http://nexus.hc.to/content/repositories/pub_releases"
    }

    maven {
        url "http://rymatemc.co.uk:8081/artifactory/libs-snapshot-local"
    }

}

configurations.all {
    // check for updates every build
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

configurations {
    releaseJars
    debugJars
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.11'
    releaseJars "com.sparkjava:spark-core:2.5.4"
    releaseJars 'com.sparkjava:spark-template-handlebars:1.0.0'
    releaseJars 'com.google.code.gson:gson:2.2.4'
    releaseJars group: "com.vaadin", name: "vaadin-sass-compiler", version: "1.0.0-SNAPSHOT", changing: true

    debugJars group: 'org.slf4j', name: 'slf4j-simple', version: '1.6.1'

    compile 'com.google.code.gson:gson:2.2.4'
    compile "com.sparkjava:spark-core:2.5.4"
    compile 'com.sparkjava:spark-template-handlebars:1.0.0'

    compile group: 'org.bukkit', name: 'bukkit', version: '1.11-R0.1-SNAPSHOT'
    compile group: 'net.milkbowl.vault', name: 'Vault', version: '1.6.6'
    compile 'org.apache.logging.log4j:log4j-core:2.0.2'
    compile group: "com.vaadin", name: "vaadin-sass-compiler", version: "1.0.0-SNAPSHOT", changing: true
}

jar {
    from (configurations.releaseJars.resolve().collect { it.isDirectory() ? it : zipTree(it) }) {
        exclude 'META-INF/MANIFEST.MF'
        exclude 'META-INF/*.SF'
        exclude 'META-INF/*.DSA'
        exclude 'META-INF/*.RSA'
        exclude '*.html'
    }
}

task debugJar(type: Jar) {
    appendix = "debug"
    from sourceSets.main.output // that's it

    from (configurations.releaseJars.resolve().collect { it.isDirectory() ? it : zipTree(it) }) {
        exclude 'META-INF/MANIFEST.MF'
        exclude 'META-INF/*.SF'
        exclude 'META-INF/*.DSA'
        exclude 'META-INF/*.RSA'
        exclude '*.html'
    }

    from (configurations.debugJars.resolve().collect { it.isDirectory() ? it : zipTree(it) }) {
        exclude 'META-INF/MANIFEST.MF'
        exclude 'META-INF/*.SF'
        exclude 'META-INF/*.DSA'
        exclude 'META-INF/*.RSA'
        exclude '*.html'
    }
}

